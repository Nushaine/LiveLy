[{"C:\\Users\\vansh\\Documents\\LiveLy\\src\\index.js":"1","C:\\Users\\vansh\\Documents\\LiveLy\\src\\App.js":"2","C:\\Users\\vansh\\Documents\\LiveLy\\src\\reportWebVitals.js":"3","C:\\Users\\vansh\\Documents\\LiveLy\\src\\Routes.js":"4","C:\\Users\\vansh\\Documents\\LiveLy\\src\\services\\history.js":"5","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsFootball.js":"6","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\SignIn.js":"7","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsBaseball.js":"8","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\SignUp.js":"9","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Dashboard.js":"10","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsBasketball.js":"11","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsTennis.js":"12","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Questions.js":"13","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Question.js":"14","C:\\Users\\vansh\\Documents\\LiveLy\\src\\util\\firebase.js":"15"},{"size":517,"mtime":1612081075673,"results":"16","hashOfConfig":"17"},{"size":325,"mtime":1612081075650,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1612081075675,"results":"19","hashOfConfig":"17"},{"size":1136,"mtime":1612081075658,"results":"20","hashOfConfig":"17"},{"size":113,"mtime":1612081075676,"results":"21","hashOfConfig":"17"},{"size":2810,"mtime":1612081075669,"results":"22","hashOfConfig":"17"},{"size":2204,"mtime":1612081075671,"results":"23","hashOfConfig":"17"},{"size":2841,"mtime":1612081075668,"results":"24","hashOfConfig":"17"},{"size":1948,"mtime":1612081075672,"results":"25","hashOfConfig":"17"},{"size":8695,"mtime":1612102593356,"results":"26","hashOfConfig":"17"},{"size":3238,"mtime":1612085450273,"results":"27","hashOfConfig":"17"},{"size":2876,"mtime":1612081075670,"results":"28","hashOfConfig":"17"},{"size":3233,"mtime":1612086196350,"results":"29","hashOfConfig":"17"},{"size":9515,"mtime":1612086500069,"results":"30","hashOfConfig":"17"},{"size":540,"mtime":1612081209628,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"m9awz1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\vansh\\Documents\\LiveLy\\src\\index.js",[],["72","73"],"C:\\Users\\vansh\\Documents\\LiveLy\\src\\App.js",["74"],"\r\nimport './App.css';\r\nimport Axios from 'axios';\r\nimport React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './services/history';\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n      <Routes />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\vansh\\Documents\\LiveLy\\src\\reportWebVitals.js",[],"C:\\Users\\vansh\\Documents\\LiveLy\\src\\Routes.js",[],"C:\\Users\\vansh\\Documents\\LiveLy\\src\\services\\history.js",[],"C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsFootball.js",["75","76","77","78","79"],"import Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport OBJ from '../OBJ.png';\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\nvar questions=[];\r\n\r\nfunction GetQuestions() {\r\n\r\n\r\n        Axios.get(\"https://jservice.io/api/category?id=366\").then((r) => {\r\n            r.data.clues.map(\r\n                res => {\r\n                    questions.push(res);\r\n                }\r\n            )\r\n        })\r\n\r\n\r\n}\r\n\r\nGetQuestions();\r\nfunction KeyWordsFootball() {\r\n  return (\r\n    <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n        <div style={{backgroundColor: \"white\", width: \"70rem\", height: \"100vh\"}}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", marginTop: \"5rem\", marginLeft: \"5rem\"}}>\r\n                <img src=\"https://cdn.discordapp.com/attachments/755482464104874165/805221423597355047/unknown.png\" style={{width: \"4rem\", height: \"4rem\"}}></img>\r\n                <b style={{fontSize: \"1.5rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Live.ly</b>\r\n            </div>\r\n            <div style={{marginTop: \"5rem\", marginLeft: \"10rem\"}}>\r\n                <b style={{fontSize: \"3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Enter <span style={{color: \"#FDB531\"}}>Key Words</span></b>\r\n                <p style={{fontSize: \"1.3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\", color: \"#646464\", marginTop: \"2%\"}}>Seperate key words with commas</p>\r\n                <input className=\"keywordInput\" style={{marginLeft: \"1.2rem\", width: \"35rem\", borderBottomWidth: \"0.1rem\", borderBottomColor: \"black\", borderTopWidth: \"0\", borderLeftWidth: \"0\", borderRightWidth: \"0\", marginTop: \"5%\", height: \"3rem\", fontSize: \"1.5rem\"}} placeholder=\"Toronto Raptors, Kobe Bryant, Basketball\"></input>\r\n\r\n            </div>\r\n            <div style={{marginTop: \"5rem\"}}>\r\n\r\n                <Link to={{pathname:'/questions', questionProps:{questions:questions} }} >\r\n                    <button style={{marginLeft: \"11.2rem\", border: \"0\", backgroundColor: \"#FDB531\", height: \"3.5rem\", width: \"20rem\", textAlign:\"left\", color: \"white\", borderRadius: \"0.5rem\"}}><span style={{marginLeft: \"1rem\", fontSize: \"1.2rem\"}} ><b>Generate Questions</b></span></button> \r\n                </Link>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        <div style={{backgroundColor: \"#FDB531\",  width: \"30rem\", height: \"100vh\", overflow: \"hidden\"}}>\r\n        <div style={{marginLeft: \"3.5rem\", marginTop: \"4rem\"}}>\r\n            <b style={{color: \"white\", fontSize: \"3.2rem\"}}>Football Game</b>\r\n            <p style={{color:\"white\", fontSize: \"1.2rem\"}}>28th December, 5:00pm</p>\r\n\r\n            <img src={OBJ} style={{height: \"400px\", width: \"30em\", position:\"absolute\", bottom:\"0\", right:\"0\"}}></img>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyWordsFootball;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\SignIn.js",["80","81"],"import React from \"react\";\r\nimport logo from '../logo1.png';\r\nimport SignUp from './SignUp';\r\nimport {Link} from 'react-router-dom';\r\n\r\nlet styles = {\r\n    container: {\r\n        height:\"100vh\",\r\n        width:\"100vw\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n\r\n    },\r\n    logoStyle:{\r\n        height:\"90px\",\r\n        width:\"90px\",\r\n\r\n    },\r\n    emailInput:{\r\n        height:\"57px\",\r\n        width:\"346px\",\r\n        borderRadius:\"10px\",\r\n        color:\"#AEAEAE\",\r\n        border:\"0px solid #ffffff\",\r\n        backgroundColor:\"#f5f5f5\",\r\n        marginTop:\"30px\",\r\n        paddingLeft:\"30px\",\r\n        fontSize:\"16px\",\r\n    },\r\n    loginForm:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        \r\n    },\r\n    loginSubmit:{\r\n        height:\"48px\",\r\n        width:\"346px\",\r\n        backgroundColor:\"#FAD574\",\r\n        border:\"0px solid #ffffff\",\r\n        borderRadius:\"10px\",\r\n        marginTop:\"20px\",\r\n        fontFamily:\"system-ui\",\r\n        color:\"white\",\r\n        fontWeight:\"700\",\r\n        fontSize:\"16px\",\r\n    },\r\n    createAccountSubmit:{\r\n        height:\"48px\",\r\n        width:\"346px\",\r\n        backgroundColor:\"#F73657\",\r\n        border:\"0px solid #ffffff\",\r\n        borderRadius:\"10px\",\r\n        marginTop:\"20px\",\r\n        fontFamily:\"system-ui\",\r\n        color:\"white\",\r\n        fontWeight:\"700\",\r\n        fontSize:\"16px\",\r\n    },\r\n  }\r\n\r\nfunction SignIn() {\r\n  return (\r\n    <div style={styles.container}>\r\n        <img src={logo} style={styles.logoStyle} />\r\n        <h1>Sign In</h1>\r\n        <form style = {styles.loginForm}>\r\n          <input placeholder=\"Username\" type=\"text\" style={styles.emailInput}/>\r\n          <input placeholder=\"Password\" type=\"text\" style={styles.emailInput}/>\r\n          <Link to=\"/dashboard\" >\r\n            <input value=\"Login\" type=\"submit\" style={styles.loginSubmit}/>\r\n          </Link>\r\n          <Link to=\"/signup\" >\r\n            <input value=\"Create Account\" type=\"submit\" style={styles.createAccountSubmit} />\r\n          </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsBaseball.js",["82","83","84","85","86"],"import Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport BaseballMan from '../baseballMan.png'\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\nvar questions=[];\r\n\r\nfunction GetQuestions() {\r\n\r\n        Axios.get(\"https://jservice.io/api/category?id=2\").then((r) => {\r\n            r.data.clues.map(\r\n                res => {\r\n                    questions.push(res);\r\n                }\r\n            )\r\n        })\r\n\r\n}\r\n\r\nGetQuestions();\r\nfunction KeywordsBaseball() {\r\n  return (\r\n    <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n        <div style={{backgroundColor: \"white\", width: \"70rem\", height: \"100vh\"}}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", marginTop: \"5rem\", marginLeft: \"5rem\"}}>\r\n                <img src=\"https://cdn.discordapp.com/attachments/755482464104874165/805221423597355047/unknown.png\" style={{width: \"4rem\", height: \"4rem\"}}></img>\r\n                <b style={{fontSize: \"1.5rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Live.ly</b>\r\n            </div>\r\n            <div style={{marginTop: \"5rem\", marginLeft: \"10rem\"}}>\r\n                <b style={{fontSize: \"3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Enter <span style={{color: \"#FDB531\"}}>Key Words</span></b>\r\n                <p style={{fontSize: \"1.3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\", color: \"#646464\", marginTop: \"2%\"}}>Seperate key words with commas</p>\r\n                <input className=\"keywordInput\" style={{marginLeft: \"1.2rem\", width: \"35rem\", borderBottomWidth: \"0.1rem\", borderBottomColor: \"black\", borderTopWidth: \"0\", borderLeftWidth: \"0\", borderRightWidth: \"0\", marginTop: \"5%\", height: \"3rem\", fontSize: \"1.5rem\"}} placeholder=\"Toronto Raptors, Kobe Bryant, Basketball\"></input>\r\n\r\n            </div>\r\n            <div style={{marginTop: \"5rem\"}}>\r\n                <Link to={{pathname:'/questions', questionProps:{questions:questions} }}>\r\n                    <button style={{marginLeft: \"11.2rem\", border: \"0\", backgroundColor: \"#FDB531\", height: \"3.5rem\", width: \"20rem\", textAlign:\"left\", color: \"white\", borderRadius: \"0.5rem\"}}><span style={{marginLeft: \"1rem\", fontSize: \"1.2rem\"}} ><b>Generate Questions</b></span></button>\r\n                \r\n                </Link>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        <div style={{backgroundColor: \"#FDB531\",  width: \"30rem\", height: \"100vh\", overflow: \"hidden\"}}>\r\n        <div style={{marginLeft: \"3.5rem\", marginTop: \"4rem\"}}>\r\n            <b style={{color: \"white\", fontSize: \"3.2rem\"}}>Baseball Game</b>\r\n            <p style={{color:\"white\", fontSize: \"1.2rem\"}}>28th December, 5:00pm</p>\r\n\r\n            <img src={BaseballMan} style={{height: \"500px\", width: \"27em\", position:\"absolute\", bottom:\"0\", right:\"0\"}}></img>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeywordsBaseball;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\SignUp.js",["87"],"import React from \"react\";\r\nimport logo from '../logo1.png';\r\n\r\nlet styles = {\r\n    container: {\r\n        height:\"100vh\",\r\n        width:\"100vw\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n\r\n    },\r\n    logoStyle:{\r\n        height:\"90px\",\r\n        width:\"90px\",\r\n\r\n    },\r\n    emailInput:{\r\n        height:\"57px\",\r\n        width:\"346px\",\r\n        borderRadius:\"10px\",\r\n        color:\"#AEAEAE\",\r\n        border:\"0px solid #ffffff\",\r\n        backgroundColor:\"#f5f5f5\",\r\n        marginTop:\"30px\",\r\n        paddingLeft:\"30px\",\r\n        fontSize:\"16px\",\r\n    },\r\n    loginForm:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        \r\n    },\r\n    loginSubmit:{\r\n        height:\"48px\",\r\n        width:\"346px\",\r\n        backgroundColor:\"#FAD574\",\r\n        border:\"0px solid #ffffff\",\r\n        borderRadius:\"10px\",\r\n        marginTop:\"20px\",\r\n        fontFamily:\"system-ui\",\r\n        color:\"white\",\r\n        fontWeight:\"700\",\r\n        fontSize:\"16px\",\r\n    },\r\n    createAccountSubmit:{\r\n        height:\"48px\",\r\n        width:\"346px\",\r\n        backgroundColor:\"#F73657\",\r\n        border:\"0px solid #ffffff\",\r\n        borderRadius:\"10px\",\r\n        marginTop:\"20px\",\r\n        fontFamily:\"system-ui\",\r\n        color:\"white\",\r\n        fontWeight:\"700\",\r\n        fontSize:\"16px\",\r\n    },\r\n  }\r\n\r\nfunction SignUp() {\r\n  return (\r\n    <div style={styles.container}>\r\n        <img src={logo} style={styles.logoStyle} />\r\n        <h1>Create an account</h1>\r\n        <form style = {styles.loginForm}>\r\n          <input placeholder=\"Username\" type=\"text\" style={styles.emailInput}/>\r\n          <input placeholder=\"Password\" type=\"text\" style={styles.emailInput}/>\r\n          <input value=\"CreateAccount\" type=\"submit\" style={styles.loginSubmit}/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Dashboard.js",["88","89","90","91","92","93","94","95","96","97","98","99","100"],"C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsBasketball.js",["101","102","103","104","105","106","107"],"import Axios from 'axios';\r\nimport Questions from './Questions';\r\nimport {Link} from 'react-router-dom';\r\nimport {useState, useEffect} from \"react\"\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\nvar questions=[];\r\n\r\n\r\n\r\n\r\nfunction KeywordsBasketball() {\r\n    function GetQuestions() {\r\n        console.log(\"Button was pressed\");\r\n        Axios.get(\"https://jservice.io/api/category?id=2094\").then((r) => {\r\n            r.data.clues.map(\r\n                res => {\r\n                    questions.push(res);\r\n                }\r\n            )\r\n        });\r\n        \r\n}\r\nGetQuestions();\r\nconst [numberOfQuestions, setQuestions] = useState(5);\r\n\r\n  return (\r\n    <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n        <div style={{backgroundColor: \"white\", width: \"70rem\", height: \"100vh\"}}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", marginTop: \"5rem\", marginLeft: \"5rem\"}}>\r\n                <img src=\"https://cdn.discordapp.com/attachments/755482464104874165/805221423597355047/unknown.png\" style={{width: \"4rem\", height: \"4rem\"}}></img>\r\n                <b style={{fontSize: \"1.5rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Live.ly</b>\r\n            </div>\r\n            <div style={{marginTop: \"5rem\", marginLeft: \"10rem\"}}>\r\n                <b style={{fontSize: \"3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Enter <span style={{color: \"#FDB531\"}}># of Questions</span></b>\r\n                <p style={{fontSize: \"1.3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\", color: \"#646464\", marginTop: \"2%\"}}>We will scan a RSS feed and automatically create questions for this trivia event!</p>\r\n                <input value={numberOfQuestions} onChange={(e) => {setQuestions(e.target.value); console.log(numberOfQuestions)}} className=\"keywordInput\" type=\"Number\" style={{marginLeft: \"1.2rem\", width: \"35rem\", borderBottomWidth: \"0.1rem\", borderBottomColor: \"black\", borderTopWidth: \"0\", borderLeftWidth: \"0\", borderRightWidth: \"0\", marginTop: \"5%\", height: \"3rem\", fontSize: \"1.5rem\"}} placeholder=\"\"></input>\r\n\r\n            </div>\r\n            <div style={{marginTop: \"5rem\"}}>\r\n            <Link to={{pathname:'/questions', questionProps:{questions:questions}, numberOfQuestions: numberOfQuestions}} >\r\n                <button style={{marginLeft: \"11.2rem\", border: \"0\", backgroundColor: \"#FDB531\", height: \"3.5rem\", width: \"20rem\", textAlign:\"left\", color: \"white\", borderRadius: \"0.5rem\"}}><span style={{marginLeft: \"1rem\", fontSize: \"1.2rem\"}} ><b>Generate Questions</b></span></button>\r\n            </Link>\r\n     \r\n\r\n            </div>\r\n            \r\n        </div>\r\n        <div style={{backgroundColor: \"#FDB531\",  width: \"30rem\", height: \"100vh\", overflow: \"hidden\"}}>\r\n        <div style={{marginLeft: \"3.5rem\", marginTop: \"4rem\"}}>\r\n            <b style={{color: \"white\", fontSize: \"3.2rem\"}}>Raptors @<br />Wizards</b>\r\n            <p style={{color:\"white\", fontSize: \"1.2rem\"}}>28th December, 5:00pm</p>\r\n\r\n            <img src=\"https://cdn.discordapp.com/attachments/804898083241459732/805267413125955594/unknown.png\" style={{height: \"400px\", width: \"27em\", position:\"absolute\", bottom:\"0\", right:\"0\"}}></img>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeywordsBasketball;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\KeyWordsTennis.js",["108","109","110","111","112"],"import Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\nvar questions=[];\r\n\r\nfunction GetQuestions() {\r\n\r\n        Axios.get(\"https://jservice.io/category?id=1147\").then((r) => {\r\n            r.data.clues.map(\r\n                res => {\r\n                    questions.push(res);\r\n                }\r\n            )\r\n        })\r\n\r\n}\r\n\r\nGetQuestions();\r\nfunction KeyWordsTennis() {\r\n  return (\r\n    <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n        <div style={{backgroundColor: \"white\", width: \"70rem\", height: \"100vh\"}}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", marginTop: \"5rem\", marginLeft: \"5rem\"}}>\r\n                <img src=\"https://cdn.discordapp.com/attachments/755482464104874165/805221423597355047/unknown.png\" style={{width: \"4rem\", height: \"4rem\"}}></img>\r\n                <b style={{fontSize: \"1.5rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Live.ly</b>\r\n            </div>\r\n            <div style={{marginTop: \"5rem\", marginLeft: \"10rem\"}}>\r\n                <b style={{fontSize: \"3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\"}}>Enter <span style={{color: \"#FDB531\"}}>Key Words</span></b>\r\n                <p style={{fontSize: \"1.3rem\", marginLeft: \"1.2rem\", marginTop: \"0.5rem\", color: \"#646464\", marginTop: \"2%\"}}>Seperate key words with commas</p>\r\n                <input className=\"keywordInput\" style={{marginLeft: \"1.2rem\", width: \"35rem\", borderBottomWidth: \"0.1rem\", borderBottomColor: \"black\", borderTopWidth: \"0\", borderLeftWidth: \"0\", borderRightWidth: \"0\", marginTop: \"5%\", height: \"3rem\", fontSize: \"1.5rem\"}} placeholder=\"Toronto Raptors, Kobe Bryant, Basketball\"></input>\r\n\r\n            </div>\r\n            <div style={{marginTop: \"5rem\"}}>\r\n                <Link to={{pathname:'/questions', questionProps:{questions:questions} }}>\r\n                \r\n                    <button style={{marginLeft: \"11.2rem\", border: \"0\", backgroundColor: \"#FDB531\", height: \"3.5rem\", width: \"20rem\", textAlign:\"left\", color: \"white\", borderRadius: \"0.5rem\"}}><span style={{marginLeft: \"1rem\", fontSize: \"1.2rem\"}} ><b>Generate Questions</b></span></button>\r\n                </Link>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        <div style={{backgroundColor: \"#FDB531\",  width: \"30rem\", height: \"100vh\", overflow: \"hidden\"}}>\r\n        <div style={{marginLeft: \"3.5rem\", marginTop: \"4rem\"}}>\r\n            <b style={{color: \"white\", fontSize: \"3.2rem\"}}>Raptors @<br />Wizards</b>\r\n            <p style={{color:\"white\", fontSize: \"1.2rem\"}}>28th December, 5:00pm</p>\r\n\r\n            <img src=\"https://cdn.discordapp.com/attachments/804898083241459732/805267413125955594/unknown.png\" style={{height: \"400px\", width: \"27em\", position:\"absolute\", bottom:\"0\", right:\"0\"}}></img>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KeyWordsTennis;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Questions.js",["113","114","115","116","117","118","119"],"import logo from '../logo.png';\r\nimport Question from './Question';\r\nimport React, {useEffect, useState} from 'react';\r\nimport firebase from \"../util/firebase\"\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\nfunction genNum(lim) {\r\n  return Math.floor((Math.random() * 70) + 1);\r\n}\r\n\r\nfunction pushFirebase(qu, all) {\r\n  const ref = firebase.database().ref('CurrentEvent/Questions');\r\n  let a = all.length - 1\r\n  let b = Math.floor((Math.random() * 70) + 1);\r\n  let p = []\r\n  while (p.length <= 3) {\r\n    let c = genNum(a)\r\n    if (!p.includes(c)) {\r\n      p.push(c)\r\n    }\r\n  }\r\n  let h = all[p[2]].answer\r\n  let g = all[p[1]].answer\r\n\r\n  let questionGiven = {\r\n    question: qu.question,\r\n    answer: qu.answer,\r\n    optionB: all[p[0]].answer,\r\n    optionC: g,\r\n    optionD: h,\r\n  }\r\n\r\n  ref.push(questionGiven)\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar b = 0\r\nfunction Questions(props) {\r\n\r\n  \r\n  return (\r\n    <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n        <div style={{backgroundColor: \"white\", width: \"70vw\", height: \"100vh\"}}>\r\n            \r\n      \r\n            <div style={{marginTop: \"5rem\", display:\"flex\", flexDirection:\"column\", marginLeft:\"8rem\"}}>\r\n                <img src={logo} style={{width:\"200px\", }}></img>\r\n                <p style={{fontSize: \"3rem\", marginLeft: \"1.2rem\", marginTop: \"5rem\", fontFamily:\"Mulish\", fontWeight:\"800\", textAlign:\"left\"}}>Questions <span style={{color: \"#FDB531\"}}>Generated </span></p>\r\n            {\r\n            \r\n             shuffle(props.location.questionProps.questions).slice(0, props.location.numberOfQuestions).map(\r\n                    e => {\r\n                        {pushFirebase(e, props.location.questionProps.questions)}\r\n                        {b=1}\r\n\r\n                        return( \r\n                            <Question questionList = {props.location.questionProps.questions} question={e} number={b} /> \r\n\r\n                        )\r\n                    }\r\n\r\n                )\r\n            }\r\n            </div>\r\n\r\n           \r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div style={{backgroundColor: \"#FDB531\",  width: \"30vw\", height: \"40vh\", position:\"-webkit-sticky\", top:0}}>\r\n            <div style={{marginLeft: \"3.5rem\", marginTop: \"4rem\"}}>\r\n                <b style={{color: \"white\", fontSize: \"3.2rem\"}}>Raptors @<br />Wizards</b>\r\n                <p style={{color:\"white\", fontSize: \"1.2rem\"}}>28th December, 5:00pm</p>\r\n\r\n                {/* <img src=\"https://cdn.discordapp.com/attachments/804898083241459732/805267413125955594/unknown.png\" style={{height: \"50vh\", width: \"29.5vw\", position:\"absolute\", bottom:\"0\", right:\"0\"}}></img> */}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n  function shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\components\\Question.js",["120","121","122","123","124","125","126","127","128"],"import logo from '../logo.png';\r\nlet styles = {\r\n\r\n\r\n}\r\n\r\n\r\nfunction Question(props) {\r\n    if(getRandomInt(1,4) == 1){\r\n  return (\r\n        <div style={{height:\"235px\", width:\"600px\", display:\"flex\", flexDirection:\"column\", padding:\"10px\"}} > \r\n        <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}}>\r\n                <a href=\"#\" style={{fontFamily:\"Mulish\", fontWeight:\"800\", color:\"blue\"}}>Switch</a>\r\n            <p style={{ marginLeft:\"2rem\" }} >{props.question.question}</p>\r\n        </div> \r\n        <div style={{display:\"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap:\"15px 10px\", marginTop:\"20px\"}} >\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"orange\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >A</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.question.answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >B</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >C</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >D</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n  )}else if(getRandomInt(2,4) == 2) {\r\n    return (\r\n        <div style={{height:\"235px\", width:\"600px\", display:\"flex\", flexDirection:\"column\", padding:\"10px\"}} > \r\n        <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}}>\r\n            <a href=\"#\" style={{fontFamily:\"Mulish\", fontWeight:\"800\", color:\"blue\"}}>Switch</a>\r\n\r\n            <p style={{ marginLeft:\"2rem\" }} >{props.question.question}</p>\r\n        </div> \r\n        <div style={{display:\"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap:\"15px 10px\", marginTop:\"20px\"}} >\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >B</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"orange\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >A</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.question.answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >C</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >D</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n  }else if(getRandomInt(3,4) == 3) {\r\n    return (\r\n        <div style={{height:\"235px\", width:\"600px\", display:\"flex\", flexDirection:\"column\", padding:\"10px\"}} > \r\n        <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}}>\r\n            <a href=\"#\" style={{fontFamily:\"Mulish\", fontWeight:\"800\", color:\"blue\"}}>Switch</a>\r\n\r\n            <p style={{ marginLeft:\"2rem\" }} >{props.question.question}</p>\r\n        </div> \r\n        <div style={{display:\"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap:\"15px 10px\", marginTop:\"20px\"}} >\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >B</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >C</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"orange\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >A</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.question.answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >D</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n  }else {\r\n    return (\r\n        <div style={{height:\"235px\", width:\"600px\", display:\"flex\", flexDirection:\"column\", padding:\"10px\"}} > \r\n        <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}}>\r\n        <a href=\"#\" style={{fontFamily:\"Mulish\", fontWeight:\"800\", color:\"blue\"}}>Switch</a>\r\n\r\n            <p style={{ marginLeft:\"2rem\" }} >{props.question.question}</p>\r\n        </div> \r\n        <div style={{display:\"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap:\"15px 10px\", marginTop:\"20px\"}} >\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >B</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >C</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"#f5f5f5\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >D</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.questionList[getRandomInt(0,13)].answer}</p>\r\n               </div>   \r\n            </div>\r\n\r\n            <div style={{width:\"280px\", height:\"55px\", backgroundColor:\"orange\", borderRadius:\"10px\" }} >\r\n               <div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\"}} >\r\n                   <p style={{marginLeft:\"35px\", color:\"#BEBEBE\"}} >A</p>\r\n                   <p style={{marginLeft:\"15px\"}}>{props.question.answer}</p>\r\n               </div>\r\n               \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n  }\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }   \r\n}\r\n\r\nexport default Question;\r\n","C:\\Users\\vansh\\Documents\\LiveLy\\src\\util\\firebase.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"137","line":4,"column":5,"nodeType":"135","messageId":"136","endLine":4,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":16,"column":21,"nodeType":"140","messageId":"141","endLine":16,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":31,"column":17,"nodeType":"144","endLine":31,"endColumn":157},{"ruleId":"145","severity":1,"message":"146","line":36,"column":109,"nodeType":"147","messageId":"148","endLine":36,"endColumn":118},{"ruleId":"142","severity":1,"message":"143","line":54,"column":13,"nodeType":"144","endLine":54,"endColumn":113},{"ruleId":"133","severity":1,"message":"149","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":68,"column":9,"nodeType":"144","endLine":68,"endColumn":52},{"ruleId":"133","severity":1,"message":"137","line":4,"column":5,"nodeType":"135","messageId":"136","endLine":4,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":15,"column":21,"nodeType":"140","messageId":"141","endLine":15,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":29,"column":17,"nodeType":"144","endLine":29,"endColumn":157},{"ruleId":"145","severity":1,"message":"146","line":34,"column":109,"nodeType":"147","messageId":"148","endLine":34,"endColumn":118},{"ruleId":"142","severity":1,"message":"143","line":52,"column":13,"nodeType":"144","endLine":52,"endColumn":121},{"ruleId":"142","severity":1,"message":"143","line":66,"column":9,"nodeType":"144","endLine":66,"endColumn":52},{"ruleId":"133","severity":1,"message":"149","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":137,"column":17,"nodeType":"140","endLine":142,"endColumn":6},{"ruleId":"133","severity":1,"message":"152","line":139,"column":13,"nodeType":"135","messageId":"136","endLine":139,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":154,"column":17,"nodeType":"144","endLine":154,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":158,"column":17,"nodeType":"144","endLine":158,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":162,"column":17,"nodeType":"144","endLine":162,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":166,"column":17,"nodeType":"144","endLine":166,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":180,"column":21,"nodeType":"144","endLine":180,"endColumn":58},{"ruleId":"142","severity":1,"message":"143","line":195,"column":22,"nodeType":"144","endLine":195,"endColumn":123},{"ruleId":"142","severity":1,"message":"143","line":201,"column":22,"nodeType":"144","endLine":201,"endColumn":122},{"ruleId":"142","severity":1,"message":"143","line":207,"column":22,"nodeType":"144","endLine":207,"endColumn":122},{"ruleId":"142","severity":1,"message":"143","line":213,"column":22,"nodeType":"144","endLine":213,"endColumn":130},{"ruleId":"142","severity":1,"message":"143","line":219,"column":22,"nodeType":"144","endLine":219,"endColumn":130},{"ruleId":"133","severity":1,"message":"155","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"156","line":4,"column":19,"nodeType":"135","messageId":"136","endLine":4,"endColumn":28},{"ruleId":"133","severity":1,"message":"137","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":20,"column":21,"nodeType":"140","messageId":"141","endLine":20,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":34,"column":17,"nodeType":"144","endLine":34,"endColumn":157},{"ruleId":"145","severity":1,"message":"146","line":39,"column":109,"nodeType":"147","messageId":"148","endLine":39,"endColumn":118},{"ruleId":"142","severity":1,"message":"143","line":57,"column":13,"nodeType":"144","endLine":57,"endColumn":198},{"ruleId":"133","severity":1,"message":"137","line":3,"column":5,"nodeType":"135","messageId":"136","endLine":3,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":14,"column":21,"nodeType":"140","messageId":"141","endLine":14,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":28,"column":17,"nodeType":"144","endLine":28,"endColumn":157},{"ruleId":"145","severity":1,"message":"146","line":33,"column":109,"nodeType":"147","messageId":"148","endLine":33,"endColumn":118},{"ruleId":"142","severity":1,"message":"143","line":51,"column":13,"nodeType":"144","endLine":51,"endColumn":198},{"ruleId":"133","severity":1,"message":"156","line":3,"column":16,"nodeType":"135","messageId":"136","endLine":3,"endColumn":25},{"ruleId":"133","severity":1,"message":"157","line":3,"column":27,"nodeType":"135","messageId":"136","endLine":3,"endColumn":35},{"ruleId":"133","severity":1,"message":"137","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":11},{"ruleId":"133","severity":1,"message":"158","line":17,"column":7,"nodeType":"135","messageId":"136","endLine":17,"endColumn":8},{"ruleId":"142","severity":1,"message":"143","line":55,"column":17,"nodeType":"144","endLine":55,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":61,"column":25,"nodeType":"161","messageId":"162","endLine":61,"endColumn":82},{"ruleId":"159","severity":1,"message":"160","line":62,"column":25,"nodeType":"161","messageId":"162","endLine":62,"endColumn":30},{"ruleId":"133","severity":1,"message":"163","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":12},{"ruleId":"133","severity":1,"message":"137","line":2,"column":5,"nodeType":"135","messageId":"136","endLine":2,"endColumn":11},{"ruleId":"164","severity":1,"message":"165","line":9,"column":26,"nodeType":"166","messageId":"148","endLine":9,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":13,"column":17,"nodeType":"144","endLine":13,"endColumn":91},{"ruleId":"164","severity":1,"message":"165","line":49,"column":31,"nodeType":"166","messageId":"148","endLine":49,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":53,"column":13,"nodeType":"144","endLine":53,"endColumn":87},{"ruleId":"164","severity":1,"message":"165","line":92,"column":30,"nodeType":"166","messageId":"148","endLine":92,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":96,"column":13,"nodeType":"144","endLine":96,"endColumn":87},{"ruleId":"153","severity":1,"message":"154","line":141,"column":9,"nodeType":"144","endLine":141,"endColumn":83},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'SignUp' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Questions' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'b' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]